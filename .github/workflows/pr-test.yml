name: pr-test

on:
  workflow_dispatch:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
    terraform:
      name: Format and Validate Terraform Code
      runs-on: ubuntu-latest

      # These permissions are needed to interact with GitHub's OIDC Token endpoint.
      permissions:
        id-token: write
        contents: read

      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Configure AWS credentials from Test account
          uses: aws-actions/configure-aws-credentials@v1
          with:
            role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
            aws-region: us-west-2
            role-duration-seconds: 1800
            role-session-name: GithubActions-Session

        - name: Terraform Job
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_version: 1.0.11

        - name: Terraform Fmt
          id: fmt
          run: terraform fmt -check -recursive -list -no-color
          continue-on-error: false

        - name: Terraform Init
          id: init
          run: terraform init --reconfigure
          working-directory: .github/test/e2e
          continue-on-error: false

        - name: Terraform Validate
          id: validate
          working-directory: .github/test/e2e
          run: terraform validate -no-color
          continue-on-error: false

        - name: Terraform Plan
          id: plan
          working-directory: .github/test/e2e
          run: terraform plan -no-color
          continue-on-error: true

        - name: Update Pull Request
          uses: actions/github-script@0.9.0
          if: github.event_name == 'pull_request'
          env:
            PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
              #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
              #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

              <details><summary>Show Plan</summary>

              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`

              </details>

              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })

        - name: Terraform Plan Status
          if: steps.plan.outcome == 'failure'
          run: exit 1
